@model Register

@{
    ViewData["Title"] = "Register";
}

<!-- Bootstrap & FontAwesome -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/js/all.min.js"></script>

<div class="container" style="margin-top:10%;">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card p-4 shadow-lg">
                <h3 class="text-center mb-4">Create an account</h3>

                <form id="registerForm" onsubmit="return validateForm();" asp-action="Register" method="post">
                    <div class="form-group">
                        <label asp-for="FirstName">First Name</label>
                        <input id="firstName" asp-for="FirstName" class="form-control" required />
                        <span id="firstNameError" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="LastName">Last Name</label>
                        <input id="lastName" asp-for="LastName" class="form-control" required />
                        <span id="lastNameError" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Mobile">Mobile</label>
                        <input id="mobile" asp-for="Mobile" type="tel" class="form-control" pattern="[0-9]{10}" maxlength="10" required />
                        <span id="mobileError" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Password">Password</label>
                        <input id="password" asp-for="Password" type="password" class="form-control" required />
                        <span id="passwordError" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Birthdate">Birthdate</label>
                        <input id="birthdate" asp-for="Birthdate" type="date" class="form-control" required />
                        <span id="birthdateError" class="text-danger"></span>
                    </div>

                    <button type="submit" class="btn btn-primary btn-block mt-3">Register</button>
                </form>

                <div class="text-center mt-3">
                    <a href="/Account/Login">Already have an account?</a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
      document.addEventListener("DOMContentLoaded", function () {
        function validateInput(inputId, errorId) {
            let inputElement = document.getElementById(inputId);
            let errorElement = document.getElementById(errorId);

            if (!inputElement) return;

            inputElement.addEventListener("input", function () {
                validateField(inputElement, errorElement);
            });

            inputElement.addEventListener("change", function () {
                validateField(inputElement, errorElement);
            });
        }

        function validateField(inputElement, errorElement) {
            let value = inputElement.value.trim();
            let id = inputElement.id;
            let isValid = true;

            // Clear previous errors
            errorElement.innerText = "";

            //  Individual Validation Rules
               if (id === "firstName") {
            let nameRegex = /^[A-Za-z\s]+$/; //  Only letters and spaces allowed
            
                if (!nameRegex.test(value)) {                    
                    errorElement.innerText = "First name can only contain letters.";
                    isValid = false;
                } else if (value.length < 3) {
                    errorElement.innerText = "First name must be at least 3 characters.";
                    isValid = false;
                }
            }

            if (id === "lastName") {
                let nameRegex = /^[A-Za-z\s]+$/; //  Only letters and spaces allowed

                 if (!nameRegex.test(value)) {
                    errorElement.innerText = "Last name can only contain letters.";
                    isValid = false;
                } else if (value.length < 3) {
                    errorElement.innerText = "Last name must be at least 3 characters.";
                    isValid = false;
                }
            }

            if (id === "mobile" && !/^\d{10}$/.test(value)) {
                errorElement.innerText = "Enter a valid 10-digit mobile number.";
                isValid = false;
            }

            //  Strong Password Validation
            if (id === "password") {
                let strongPasswordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[\W_])[A-Za-z\d\W_]{8,12}$/;
                if (!strongPasswordRegex.test(value)) {
                    errorElement.innerText = "Password must be at least 8 characters, include one uppercase letter, one number, and a special character.";
                    isValid = false;
                }
            }

            if (id === "birthdate" && value === "") {
                errorElement.innerText = "Please select a birthdate.";
                isValid = false;
            }

            return isValid;
        }

        //  Attach Validation to Inputs (Only Affected Input Displays Error)
        validateInput("firstName", "firstNameError");
        validateInput("lastName", "lastNameError");
        validateInput("mobile", "mobileError");
        validateInput("password", "passwordError");
        validateInput("birthdate", "birthdateError");
    });
</script>
